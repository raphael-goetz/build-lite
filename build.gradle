plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "2.2.0-Beta2"
    id "com.gradleup.shadow"  version "8.3.0"
    id "xyz.jpenilla.run-paper" version "2.3.1"
}

def tagVersion = System.getenv('VERSION')
group = "de.raphaelgoetz"
version = tagVersion ?: '0.0.1-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "GitHubPackages"
        url = "https://maven.pkg.github.com/raphael-goetz/astralis"
        credentials {
            username = project.findProperty("github_username") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("github_token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    api 'de.raphaelgoetz:astralis:0.0.24-SNAPSHOT'

    implementation 'org.jetbrains.exposed:exposed-core:0.61.0'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.61.0'

    implementation('org.xerial:sqlite-jdbc:3.41.2.2') // latest version

   // implementation 'org.apache.commons:commons-compress:1.26.0'
}

tasks.named("runServer") {
    // Configure the Minecraft version for our task.
    // This is the only required configuration besides applying the plugin.
    // Your plugin's jar (or shadowJar if present) will be used automatically.
    it.minecraftVersion("1.21.9")
}
def targetJavaVersion = 21

kotlin {
    jvmToolchain(targetJavaVersion)
}

tasks.named("build") {
    it.dependsOn("shadowJar")
}

tasks.named("processResources") {
    def props = [version: version]
    inputs.properties(props)
    filteringCharset = "UTF-8"
    filesMatching("paper-plugin.yml") {
        expand(props)
    }
}
